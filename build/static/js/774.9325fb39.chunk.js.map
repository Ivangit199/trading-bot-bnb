{"version":3,"file":"static/js/774.9325fb39.chunk.js","mappings":"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","sources":["../node_modules/@walletconnect/modal-core/src/controllers/RouterCtrl.ts","../node_modules/@walletconnect/modal-core/src/utils/CoreUtil.ts","../node_modules/@walletconnect/modal-core/src/controllers/EventsCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/OptionsCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/ConfigCtrl.ts","../node_modules/@walletconnect/modal-core/src/utils/ExplorerUtil.ts","../node_modules/@walletconnect/modal-core/src/controllers/ExplorerCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/ModalCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/ThemeCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/ToastCtrl.ts","../node_modules/@walletconnect/modal/src/client.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\nconst SDK_TYPE = 'wcm'\nconst SDK_VERSION = `js-${process.env.ROLLUP_WCM_VERSION}`\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const allParams = { sdkType: SDK_TYPE, sdkVersion: SDK_VERSION, ...params }\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(allParams).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      CoreUtil.removeWalletConnectDeepLink()\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","import type { ConfigCtrlState, ThemeCtrlState } from '@walletconnect/modal-core'\nimport { ConfigCtrl, ModalCtrl, OptionsCtrl, ThemeCtrl } from '@walletconnect/modal-core'\n\n/**\n * Types\n */\nexport type WalletConnectModalConfig = ConfigCtrlState & ThemeCtrlState\n\n/**\n * Client\n */\nexport class WalletConnectModal {\n  public constructor(config: WalletConnectModalConfig) {\n    ThemeCtrl.setThemeConfig(config)\n    ConfigCtrl.setConfig(config)\n    this.initUi()\n  }\n\n  private async initUi() {\n    if (typeof window !== 'undefined') {\n      await import('@walletconnect/modal-ui')\n      const modal = document.createElement('wcm-modal')\n      document.body.insertAdjacentElement('beforeend', modal)\n      OptionsCtrl.setIsUiLoaded(true)\n    }\n  }\n\n  public openModal = ModalCtrl.open\n\n  public closeModal = ModalCtrl.close\n\n  public subscribeModal = ModalCtrl.subscribe\n\n  public setTheme = ThemeCtrl.setThemeConfig\n}\n"],"names":["state","proxy","history","view","data","RouterCtrl","subscribe","callback","valtioSub","push","reset","replace","length","goBack","pop","last","slice","setData","CoreUtil","WALLETCONNECT_DEEPLINK_CHOICE","WCM_VERSION","RECOMMENDED_WALLET_AMOUNT","isMobile","window","Boolean","matchMedia","matches","test","navigator","userAgent","isAndroid","toLowerCase","includes","isIos","ua","isHttpUrl","url","startsWith","isArray","Array","formatNativeUrl","appUrl","wcUri","name","this","formatUniversalUrl","safeAppUrl","replaceAll","endsWith","setWalletConnectDeepLink","encodeURIComponent","async","miliseconds","Promise","resolve","setTimeout","openHref","href","target","open","localStorage","setItem","JSON","stringify","console","info","setWalletConnectAndroidDeepLink","split","removeWalletConnectDeepLink","removeItem","setModalVersionInStorage","getWalletRouterData","routerData","_a","Wallet","Error","isEnabled","location","hostname","protocol","enabled","userSessionId","events","connectedWalletId","EventsCtrl","snapshot","initialize","crypto","randomUUID","setConnectedWalletId","click","event","type","timestamp","Date","now","track","chains","walletConnectUri","isAuth","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","OptionsCtrl","setChains","setWalletConnectUri","setIsCustomDesktop","setIsCustomMobile","setIsDataLoaded","setIsUiLoaded","setIsAuth","projectId","mobileWallets","desktopWallets","walletImages","enableAuthMode","enableExplorer","explorerExcludedWalletIds","explorerRecommendedWalletIds","termsOfServiceUrl","privacyPolicyUrl","ConfigCtrl","setConfig","config","_b","Object","assign","p","I","P","m","enumerable","configurable","writable","value","W3M_API","SDK_TYPE","SDK_VERSION","fetchListings","endpoint","params","allParams","l","__spreadValues","sdkType","sdkVersion","URL","searchParams","append","entries","forEach","key","String","fetch","json","getWalletImageUrl","imageId","getAssetImageUrl","u","h","y","x","wallets","listings","total","page","search","recomendedWallets","ExplorerCtrl","recommendedIds","join","ExplorerUtil","getAllListings","listingsArr","values","sort","a","b","indexOf","id","chainsFilter","isExcluded","sdks","version","excludedIds","getMobileListings","getDesktopListings","extendedParams","f","map","wallet","filter","listingsObj","resetSearch","ModalCtrl","options","uri","interval","setInterval","opts","clearInterval","close","c","themeMode","ThemeCtrl","setThemeConfig","theme","themeVariables","s","message","variant","ToastCtrl","openToast","closeToast","constructor","openModal","closeModal","subscribeModal","setTheme","initUi","modal","document","createElement","body","insertAdjacentElement"],"sourceRoot":""}